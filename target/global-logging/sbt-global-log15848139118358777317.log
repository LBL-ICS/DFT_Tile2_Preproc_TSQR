[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\DESERT~1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\DESERT~1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Adoptium Java 17.0.14)
[debug] Load.defaultLoad until apply took 424.1128ms
[debug]           Load.loadUnit: plugins took 105.5341ms
[debug]           Load.loadUnit: defsScala took 0.2011ms
[debug] [Loading] Scanning directory C:\TSQR-Factorization-Design-with-Chisel-HCL\project
[debug]             Load.loadUnit: mkEval took 8.2438ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\TSQR-Factorization-Design-with-Chisel-HCL\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.6861 ms
[info] loading settings for project tsqr-factorization-design-with-chisel-hcl-build from idea.sbt ...
[debug]               Load.resolveProject(tsqr-factorization-design-with-chisel-hcl-build) took 57.3846ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tsqr-factorization-design-with-chisel-hcl-build, base: C:\TSQR-Factorization-Design-with-Chisel-HCL\project, plugins: List(<none>))) took 100.24ms
[debug] [Loading] Done in C:\TSQR-Factorization-Design-with-Chisel-HCL\project, returning: (tsqr-factorization-design-with-chisel-hcl-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4177.6039ms
[debug]           Load.loadUnit: cleanEvalClasses took 33.1401ms
[debug]         Load.loadUnit(file:/C:/TSQR-Factorization-Design-with-Chisel-HCL/project/, ...) took 4321.8833ms
[debug]       Load.apply: load took 4560.6597ms
[debug]       Load.apply: resolveProjects took 10.9543ms
[debug]       Load.apply: finalTransforms took 65.9667ms
[debug]       Load.apply: config.delegates took 9.9461ms
[debug]       Load.apply: Def.make(settings)... took 788.5154ms
[debug]       Load.apply: structureIndex took 127.8901ms
[debug]       Load.apply: mkStreams took 6.917ms
[info] loading project definition from C:\TSQR-Factorization-Design-with-Chisel-HCL\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 10512.1411ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\TSQR-Factorization-Design-with-Chisel-HCL
[debug]       Load.loadUnit: mkEval took 0.3579ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9748 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 45.7471ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\TSQR-Factorization-Design-with-Chisel-HCL, plugins: List(<none>))) took 51.0704ms
[debug] [Loading] Done in C:\TSQR-Factorization-Design-with-Chisel-HCL, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2796.6532ms
[debug]     Load.loadUnit: cleanEvalClasses took 31.7123ms
[debug]   Load.loadUnit(file:/C:/TSQR-Factorization-Design-with-Chisel-HCL/, ...) took 13342.6899ms
[debug] Load.apply: load took 13369.8345ms
[debug] Load.apply: resolveProjects took 0.3018ms
[debug] Load.apply: finalTransforms took 43.2957ms
[debug] Load.apply: config.delegates took 0.2578ms
[debug] Load.apply: Def.make(settings)... took 353.5738ms
[debug] Load.apply: structureIndex took 103.7019ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to TSQR-Chisel-HCL (in build file:/C:/TSQR-Factorization-Design-with-Chisel-HCL/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
